/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as EnsemblesIndexImport } from './routes/ensembles/index'
import { Route as InstrumentsCreateImport } from './routes/instruments/create'
import { Route as EnsemblesCreateImport } from './routes/ensembles/create'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as UsersUserIdIndexImport } from './routes/users/$userId/index'
import { Route as ProfileSettingsIndexImport } from './routes/profile/settings/index'
import { Route as ProfileEditIndexImport } from './routes/profile/edit/index'
import { Route as EnsemblesEnsembleIdIndexImport } from './routes/ensembles/$ensembleId/index'
import { Route as EnsemblesEnsembleIdEditImport } from './routes/ensembles/$ensembleId/edit'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const EnsemblesIndexRoute = EnsemblesIndexImport.update({
  id: '/ensembles/',
  path: '/ensembles/',
  getParentRoute: () => rootRoute,
} as any)

const InstrumentsCreateRoute = InstrumentsCreateImport.update({
  id: '/instruments/create',
  path: '/instruments/create',
  getParentRoute: () => rootRoute,
} as any)

const EnsemblesCreateRoute = EnsemblesCreateImport.update({
  id: '/ensembles/create',
  path: '/ensembles/create',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdIndexRoute = UsersUserIdIndexImport.update({
  id: '/users/$userId/',
  path: '/users/$userId/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileSettingsIndexRoute = ProfileSettingsIndexImport.update({
  id: '/profile/settings/',
  path: '/profile/settings/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileEditIndexRoute = ProfileEditIndexImport.update({
  id: '/profile/edit/',
  path: '/profile/edit/',
  getParentRoute: () => rootRoute,
} as any)

const EnsemblesEnsembleIdIndexRoute = EnsemblesEnsembleIdIndexImport.update({
  id: '/ensembles/$ensembleId/',
  path: '/ensembles/$ensembleId/',
  getParentRoute: () => rootRoute,
} as any)

const EnsemblesEnsembleIdEditRoute = EnsemblesEnsembleIdEditImport.update({
  id: '/ensembles/$ensembleId/edit',
  path: '/ensembles/$ensembleId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/ensembles/create': {
      id: '/ensembles/create'
      path: '/ensembles/create'
      fullPath: '/ensembles/create'
      preLoaderRoute: typeof EnsemblesCreateImport
      parentRoute: typeof rootRoute
    }
    '/instruments/create': {
      id: '/instruments/create'
      path: '/instruments/create'
      fullPath: '/instruments/create'
      preLoaderRoute: typeof InstrumentsCreateImport
      parentRoute: typeof rootRoute
    }
    '/ensembles/': {
      id: '/ensembles/'
      path: '/ensembles'
      fullPath: '/ensembles'
      preLoaderRoute: typeof EnsemblesIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/ensembles/$ensembleId/edit': {
      id: '/ensembles/$ensembleId/edit'
      path: '/ensembles/$ensembleId/edit'
      fullPath: '/ensembles/$ensembleId/edit'
      preLoaderRoute: typeof EnsemblesEnsembleIdEditImport
      parentRoute: typeof rootRoute
    }
    '/ensembles/$ensembleId/': {
      id: '/ensembles/$ensembleId/'
      path: '/ensembles/$ensembleId'
      fullPath: '/ensembles/$ensembleId'
      preLoaderRoute: typeof EnsemblesEnsembleIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/edit/': {
      id: '/profile/edit/'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof ProfileEditIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/settings/': {
      id: '/profile/settings/'
      path: '/profile/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof ProfileSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/': {
      id: '/users/$userId/'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/ensembles/create': typeof EnsemblesCreateRoute
  '/instruments/create': typeof InstrumentsCreateRoute
  '/ensembles': typeof EnsemblesIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/ensembles/$ensembleId/edit': typeof EnsemblesEnsembleIdEditRoute
  '/ensembles/$ensembleId': typeof EnsemblesEnsembleIdIndexRoute
  '/profile/edit': typeof ProfileEditIndexRoute
  '/profile/settings': typeof ProfileSettingsIndexRoute
  '/users/$userId': typeof UsersUserIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/ensembles/create': typeof EnsemblesCreateRoute
  '/instruments/create': typeof InstrumentsCreateRoute
  '/ensembles': typeof EnsemblesIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/ensembles/$ensembleId/edit': typeof EnsemblesEnsembleIdEditRoute
  '/ensembles/$ensembleId': typeof EnsemblesEnsembleIdIndexRoute
  '/profile/edit': typeof ProfileEditIndexRoute
  '/profile/settings': typeof ProfileSettingsIndexRoute
  '/users/$userId': typeof UsersUserIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/ensembles/create': typeof EnsemblesCreateRoute
  '/instruments/create': typeof InstrumentsCreateRoute
  '/ensembles/': typeof EnsemblesIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/ensembles/$ensembleId/edit': typeof EnsemblesEnsembleIdEditRoute
  '/ensembles/$ensembleId/': typeof EnsemblesEnsembleIdIndexRoute
  '/profile/edit/': typeof ProfileEditIndexRoute
  '/profile/settings/': typeof ProfileSettingsIndexRoute
  '/users/$userId/': typeof UsersUserIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/sign-up'
    | '/ensembles/create'
    | '/instruments/create'
    | '/ensembles'
    | '/profile'
    | '/ensembles/$ensembleId/edit'
    | '/ensembles/$ensembleId'
    | '/profile/edit'
    | '/profile/settings'
    | '/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/sign-up'
    | '/ensembles/create'
    | '/instruments/create'
    | '/ensembles'
    | '/profile'
    | '/ensembles/$ensembleId/edit'
    | '/ensembles/$ensembleId'
    | '/profile/edit'
    | '/profile/settings'
    | '/users/$userId'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/sign-up'
    | '/ensembles/create'
    | '/instruments/create'
    | '/ensembles/'
    | '/profile/'
    | '/ensembles/$ensembleId/edit'
    | '/ensembles/$ensembleId/'
    | '/profile/edit/'
    | '/profile/settings/'
    | '/users/$userId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  EnsemblesCreateRoute: typeof EnsemblesCreateRoute
  InstrumentsCreateRoute: typeof InstrumentsCreateRoute
  EnsemblesIndexRoute: typeof EnsemblesIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  EnsemblesEnsembleIdEditRoute: typeof EnsemblesEnsembleIdEditRoute
  EnsemblesEnsembleIdIndexRoute: typeof EnsemblesEnsembleIdIndexRoute
  ProfileEditIndexRoute: typeof ProfileEditIndexRoute
  ProfileSettingsIndexRoute: typeof ProfileSettingsIndexRoute
  UsersUserIdIndexRoute: typeof UsersUserIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  EnsemblesCreateRoute: EnsemblesCreateRoute,
  InstrumentsCreateRoute: InstrumentsCreateRoute,
  EnsemblesIndexRoute: EnsemblesIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  EnsemblesEnsembleIdEditRoute: EnsemblesEnsembleIdEditRoute,
  EnsemblesEnsembleIdIndexRoute: EnsemblesEnsembleIdIndexRoute,
  ProfileEditIndexRoute: ProfileEditIndexRoute,
  ProfileSettingsIndexRoute: ProfileSettingsIndexRoute,
  UsersUserIdIndexRoute: UsersUserIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/sign-up",
        "/ensembles/create",
        "/instruments/create",
        "/ensembles/",
        "/profile/",
        "/ensembles/$ensembleId/edit",
        "/ensembles/$ensembleId/",
        "/profile/edit/",
        "/profile/settings/",
        "/users/$userId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/ensembles/create": {
      "filePath": "ensembles/create.tsx"
    },
    "/instruments/create": {
      "filePath": "instruments/create.tsx"
    },
    "/ensembles/": {
      "filePath": "ensembles/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/ensembles/$ensembleId/edit": {
      "filePath": "ensembles/$ensembleId/edit.tsx"
    },
    "/ensembles/$ensembleId/": {
      "filePath": "ensembles/$ensembleId/index.tsx"
    },
    "/profile/edit/": {
      "filePath": "profile/edit/index.tsx"
    },
    "/profile/settings/": {
      "filePath": "profile/settings/index.tsx"
    },
    "/users/$userId/": {
      "filePath": "users/$userId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
